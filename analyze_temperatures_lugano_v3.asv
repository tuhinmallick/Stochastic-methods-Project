%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Analysis of historical temperature data for Lugano (1981-2013) %%%%
%% and comparison of regularization methods %%%%%%%%%%%%%%%%%%%%%%%%%%
%% (c) I. Horenko, 2021 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
clear all
close all
clc
rand('seed',1)
randn('seed',1)

%%
% Load the data
load energy.mat

%% Plot 
bar(global_e)
figure;plot(subm_1,global_e);
ylabel('Global power','FontSize',14);

%%
temp=global_e;
T=length(temp);
%% 

% Compute an expectation for every day of the year

expectation_temp=zeros(1,365);
for ind=1:365
    expectation_temp(ind)=sum(temp(ind:365:T))./length(temp(ind:365:T));
    date(ind)=ind;
end
%%
% Form the seasonal trend vector out of expectations for every day
SeasonalTrend=zeros(1,T);
for t=1:T
    ind=mod(t,365);
    if ind==0
        ind=365;
    end
    SeasonalTrend(t)=expectation_temp(ind);
    temp(t)=temp(t)-SeasonalTrend(t);
end

%%
% Create higher order polynomial trends (t^2, t^3, ...,t^P)
% and normalize it (by scaling all of the trends
% to the interval [0 1])
P=40;
figure;plot(temp)
ylabel('Global power consumption','FontSize',14);
%Names={'Constant', 'Seasonal'};
X_trend=zeros(T,P);
for p=0:P
   X(:,p+1)=(1/(T^p)).*[1:T]'.^p; 
   Names{p+1}=['t^{' num2str(p) '}'];
end

 Y=temp';

% Solve original (not regularized) regression problem

min(eig(cov(X)))
Beta=ComputeBeta(X,Y);
figure;plot(Beta,'k-o','LineWidth',2,'MarkerSize',12);set(gca,'XTick',1:length(Names),'XTickLabel',Names)
ylabel('Parameter Values','FontSize',16);
set(gca,'XScale','log','LineWidth',2,'FontSize',16)
axis tight
Y_ML=Beta'*X';

% Demonstrate the problem with predictions for D days
D=3000;
X_pred=zeros(T+D,P+1);
for p=0:P
   X_pred(:,p+1)=(1/(T^(p))).*[1:T+D]'.^(p); 
end
ff=figure;plot(Y,':.','LineWidth',0.5);hold on;
plot(Beta'*X_pred','m.-','LineWidth',2);



% Solve regularized problem for different alpha

alpha=[1e-5 1e-4 1e-3 5e-3 1e-2 5e-2 1e-1 5e-1 1 2 4 8 16 32 64 128 ];
figure;hold on;
tic;
for i=1:length(alpha)
    BetaReg(:,i)=ComputeBetaRegularized(X,Y,alpha(i));
    Y_MLReg(i,:)=BetaReg(:,i)'*X';
    ErrorNorm(i)=(Y'-Y_MLReg(i,:))*(Y'-Y_MLReg(i,:))';
    SolutionNorm(i)=BetaReg(:,i)'*BetaReg(:,i);
    plot(SolutionNorm(i),ErrorNorm(i),'o','LineWidth',2);
    text(SolutionNorm(i)+1,ErrorNorm(i)-1,['\alpha=' num2str(alpha(i))],'FontSize',12);
end
time_l2=toc;
plot(SolutionNorm,ErrorNorm,':','LineWidth',2);
xlabel('Norm of the Solution \beta^\alpha','FontSize',16);
ylabel('Norm of the Residuals \epsilon','FontSize',16);
set(gca,'XScale','log','LineWidth',2,'FontSize',16)
axis tight
% Visualize Parameters and identified trend
i=11;
gg=figure;plot(0*BetaReg(:,i),'k:','LineWidth',2);hold on;plot(BetaReg(:,i),'r-o','LineWidth',2,'MarkerSize',12);set(gca,'XTick',1:length(Names),'XTickLabel',Names)
%ff=figure;plot(Y,'-','LineWidth',2);hold on;plot(Y_MLReg(i,:),'k--','LineWidth',2);
%plot(BetaReg(:,i)'*X','m.-','LineWidth',2);
% Demonstrate the predictions for D days
X_pred=zeros(T+D,P+1);
for p=0:P
   X_pred(:,p+1)=(1/(T^(p))).*[1:T+D]'.^(p); 
end
figure(ff);
plot(BetaReg(:,i)'*X_pred','r.-','LineWidth',2);

% Solve l1-regularized problem (lasso regression) 
tic;
[B,FitInfo] = lasso(X(:,2:size(X,2)),Y,'CV',10);
time_l1=toc;

disp(['Time for L2-regularization is ' num2str(time_l2) '; time for l1-regularization is ' num2str(time_l1) '; L2 is ' num2str(time_l1/time_l2) ' times cheaper than L1'])
figure(ff); 
plot(FitInfo.Intercept(FitInfo.IndexMinMSE)+B(1:size(B,1),FitInfo.IndexMinMSE)'*X_pred(:,[2:size(X,2)])','g.-','LineWidth',2);
set(gca,'LineWidth',2,'FontSize',16);
ylabel('Temperature deviations from the seasonal mean','FontSize',14);
ylim([-10 15])
legend('historical data','no regularization','L2-regularized Fit','L1-regularized Fit')
figure(gg);plot([FitInfo.Intercept(FitInfo.IndexMinMSE) B(:,FitInfo.IndexMinMSE)'],'g-o','LineWidth',2,'MarkerSize',9);set(gca,'XTick',1:length(Names),'XTickLabel',Names)
set(gca,'LineWidth',2,'FontSize',16);set(gcf,'Position',[10 100 800  600])
legend({'zero line','L2-regularization','L1-regularization'})
ylabel('Parameter Values','FontSize',16);
set(gca,'XTick',1:length(Names),'XTickLabel',Names)